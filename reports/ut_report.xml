<testExecutions version="1">
  <file path="src/app/collector/collector.service.spec.ts">
    <testCase name="Service: Collector getPost() should return 2 records" duration="155"/>
  </file>
  <file path="src/app/collector/collectorAlbum.service.spec.ts">
    <testCase name="Service: CollectorAlbum getPost() should return 2 records" duration="6"/>
  </file>
  <file path="src/app/footer/footer.component.spec.ts">
    <testCase name="FooterComponent should create" duration="38"/>
  </file>
  <file path="src/app/collector/collector-detail/collector-detail.component.spec.ts">
    <testCase name="CollectorDetailComponent should create" duration="29"/>
  </file>
  <file path="src/app/collector/collector-list/collector-list.component.spec.ts">
    <testCase name="CollectorListarComponent should create" duration="33"/>
    <testCase name="CollectorListarComponent Should have an p element with name " duration="43"/>
    <testCase name="CollectorListarComponent should capture button index" duration="30"/>
  </file>
  <file path="src/app/perfomer/list/list.component.spec.ts">
    <testCase name="ListComponent should have a musician card" duration="21"/>
    <testCase name="ListComponent should have a title tag for bands" duration="17"/>
    <testCase name="ListComponent should return formatted date" duration="16"/>
    <testCase name="ListComponent should have a title musician" duration="17"/>
    <testCase name="ListComponent should create" duration="10"/>
    <testCase name="ListComponent should have a band card" duration="12"/>
  </file>
  <file path="src/app/navbar/navbar.component.spec.ts">
    <testCase name="NavbarComponent should create" duration="31"/>
  </file>
  <file path="src/app/sidebar/sidebar.component.spec.ts">
    <testCase name="SidebarComponent should create" duration="50"/>
  </file>
  <file path="src/app/perfomer/perfomer.service.spec.ts">
    <testCase name="ArtistsService should create service" duration="3"/>
    <testCase name="ArtistsService should return 10 bands" duration="7"/>
    <testCase name="ArtistsService should return 10 musicians" duration="4"/>
  </file>
  <file path="src/app/album/album.service.spec.ts">
    <testCase name="AlbumService la subscripcion al observable que retorna obtenerAlbums se hace con el link correctamente" duration="3"/>
    <testCase name="AlbumService Se deberia crear el servicio" duration="5"/>
    <testCase name="AlbumService la subscripcion retorna el arreglo mock de albumes" duration="16"/>
    <testCase name="AlbumService existe un atributo de tipo HTTP" duration="2"/>
    <testCase name="AlbumService la funcion obtenerAlbums retorna un observable" duration="5"/>
  </file>
  <file path="src/app/app.component.spec.ts">
    <testCase name="AppComponent should have as title 'front'" duration="20"/>
    <testCase name="AppComponent should create the app" duration="22"/>
  </file>
  <file path="src/app/album/album-list/album-list.component.spec.ts">
    <testCase name="AlbumListComponent verifica que al llamar ngOnInit se haga llamado a la función starSub y defina la variables sub" duration="16"/>
    <testCase name="AlbumListComponent Verifica que al hacerse la subscripciòn, la variable album retorne el arraymock de albums" duration="13"/>
    <testCase name="AlbumListComponent verifica que la función startSub retorne un elemento de tipo subscription" duration="14"/>
    <testCase name="AlbumListComponent should create" duration="15"/>
    <testCase name="AlbumListComponent verifica que al dar click en el botón de detalle  de alguna card se accione la función detallarAlbum y se envie por parametro la posición del arreglo" duration="37"/>
    <testCase name="AlbumListComponent verifica que se muestren tantas cartas en el HTML como tamaño del arrayMock " duration="24"/>
    <testCase name="AlbumListComponent verifica que al dar click en el botón de detalle  de alguna card se accione la función detallarAlbum " duration="25"/>
    <testCase name="AlbumListComponent Verifica que al hacerse la subscripciòn, la variable album retorne el arraymock de albums" duration="15"/>
  </file>
</testExecutions>