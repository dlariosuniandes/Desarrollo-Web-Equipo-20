<testExecutions version="1">

  <file path="src/app/perfomer/perfomer.service.spec.ts">
    <testCase name="ArtistsService should return a band detail" duration="34"/>
    <testCase name="ArtistsService should create service" duration="2"/>
    <testCase name="ArtistsService should return a musician detail" duration="5"/>
    <testCase name="ArtistsService should return 10 bands" duration="2"/>
    <testCase name="ArtistsService should return 10 musicians" duration="2"/>
  </file>
  <file path="src/app/navbar/navbar.component.spec.ts">
    <testCase name="NavbarComponent should create" duration="25"/>
  </file>
  <file path="src/app/perfomer/detail/detail.component.spec.ts">
    <testCase name="DetailComponent should render date" duration="25"/>
    <testCase name="DetailComponent should render artistName" duration="8"/>
    <testCase name="DetailComponent should render list albums" duration="6"/>
    <testCase name="DetailComponent should render component container" duration="7"/>
    <testCase name="DetailComponent should return formatted date" duration="8"/>
    <testCase name="DetailComponent should create" duration="4"/>
    <testCase name="DetailComponent should render description" duration="8"/>
    <testCase name="DetailComponent should return date for perfomer either is Musician or Band" duration="5"/>
  </file>
  <file path="src/app/album/album.service.spec.ts">
    <testCase name="AlbumService existe un atributo de tipo HTTP" duration="4"/>
    <testCase name="AlbumService la subscripcion retorna el arreglo mock de albumes" duration="7"/>
    <testCase name="AlbumService Se deberia crear el servicio" duration="4"/>
    <testCase name="AlbumService la funcion obtenerAlbums retorna un observable" duration="1"/>
    <testCase name="AlbumService la subscripcion al observable que retorna obtenerAlbums se hace con el link correctamente" duration="1"/>
  </file>
  <file path="src/app/sidebar/sidebar.component.spec.ts">
    <testCase name="SidebarComponent should create" duration="15"/>
  </file>
  <file path="src/app/perfomer/list/list.component.spec.ts">
    <testCase name="ListComponent should have a band card" duration="22"/>
    <testCase name="ListComponent should have a musician card" duration="6"/>
    <testCase name="ListComponent should return formatted date" duration="5"/>
    <testCase name="ListComponent should have a title tag for bands" duration="6"/>
    <testCase name="ListComponent should create" duration="7"/>
    <testCase name="ListComponent should have a title musician" duration="6"/>
  </file>
  <file path="src/app/album/album-list/album-list.component.spec.ts">
    <testCase name="AlbumListComponent verifica que la función startSub retorne un elemento de tipo subscription" duration="5"/>
    <testCase name="AlbumListComponent should create" duration="5"/>
    <testCase name="AlbumListComponent Verifica que al hacerse la subscripciòn, la variable album retorne el arraymock de albums" duration="6"/>
    <testCase name="AlbumListComponent verifica que al llamar ngOnInit se haga llamado a la función starSub y defina la variables sub" duration="7"/>
    <testCase name="AlbumListComponent verifica que se muestren tantas cartas en el HTML como tamaño del arrayMock " duration="13"/>
    <testCase name="AlbumListComponent Verifica que al hacerse la subscripciòn, la variable album retorne el arraymock de albums" duration="8"/>
    <testCase name="AlbumListComponent verifica que al dar click en el botón de detalle  de alguna card se accione la función detallarAlbum y se envie por parametro la posición del arreglo" duration="10"/>
    <testCase name="AlbumListComponent verifica que al dar click en el botón de detalle  de alguna card se accione la función detallarAlbum " duration="8"/>
  </file>
  <file path="src/app/collector/collector-listar/collector-listar.component.spec.ts">
    <testCase name="CollectorListarComponent Should have an p element with name " duration="18"/>
    <testCase name="CollectorListarComponent should capture button index" duration="7"/>
    <testCase name="CollectorListarComponent should create" duration="5"/>
  </file>
  <file path="src/app/app.component.spec.ts">
    <testCase name="AppComponent should create the app" duration="14"/>
    <testCase name="AppComponent should have as title 'front'" duration="6"/>
  </file>
  <file path="src/app/footer/footer.component.spec.ts">
    <testCase name="FooterComponent should create" duration="4"/>
  </file>
  <file path="src/app/collector/collector.service.spec.ts">
    <testCase name="Service: Collector getPost() should return 2 records" duration="1"/>
  </file>
</testExecutions>